name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install root dependencies
        run: npm install

      - name: Copy shared directory to services
        run: bash scripts/copyShared.sh

      - name: Install dependencies for all services
        run: |
          cd services/inventory && npm install && cd -
          cd services/order && npm install && cd -
          cd services/payment && npm install && cd -
          cd services/product && npm install && cd -
          cd services/user && npm install && cd -

      - name: Run All Unit Tests
        run: |
          npx jest \
            "services/inventory/tests/unit/**/*.test.js" \
            "services/order/tests/unit/**/*.test.js" \
            "services/payment/tests/unit/**/*.test.js" \
            "services/product/tests/unit/**/*.test.js" \
            "services/user/tests/unit/**/*.test.js" \
            --reporters=default \
            --reporters=jest-junit \
            --outputFile=junit-unit.xml

      - name: Run All Integration Tests
        run: |
          npx jest \
            "services/inventory/tests/integration/**/*.test.js" \
            "services/order/tests/integration/**/*.test.js" \
            "services/payment/tests/integration/**/*.test.js" \
            "services/product/tests/integration/**/*.test.js" \
            "services/user/tests/integration/**/*.test.js" \
            --reporters=default \
            --reporters=jest-junit \
            --outputFile=junit-integration.xml

  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: test 
    if: github.event_name == 'workflow_dispatch' # Only runs on manual trigger

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          docker-compose up -d

      - name: Wait for Services
        run: |
          echo "Waiting for services to be ready..."
          sleep 20 # Adjust based on service readiness time

      - name: Set up Node.js and install dependencies
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run E2E Tests
        run: npm run test:e2e

      - name: Tear down Docker Compose
        if: always()
        run: docker-compose down